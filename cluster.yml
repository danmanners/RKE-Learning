nodes:
    - address: 10.45.0.241
      hostname_override: dev-k8s-node01
      user: ubuntu
      role:
        - controlplane
      ssh_key_path: ~/.ssh/id_rsa
    - address: 10.45.0.242
      hostname_override: dev-k8s-node02
      user: ubuntu
      role:
        - controlplane
      ssh_key_path: ~/.ssh/id_rsa
    - address: 10.45.0.243
      hostname_override: dev-k8s-node03
      user: ubuntu
      role:
        - etcd
        - worker
      ssh_key_path: ~/.ssh/id_rsa
    - address: 10.45.0.244
      hostname_override: dev-k8s-node04
      user: ubuntu
      role:
        - etcd
        - worker
      ssh_key_path: ~/.ssh/id_rsa
    - address: 10.45.0.245
      hostname_override: dev-k8s-node05
      user: ubuntu
      role:
        - etcd
        - worker
      ssh_key_path: ~/.ssh/id_rsa
    - address: 10.45.0.246
      hostname_override: dev-k8s-node06
      user: ubuntu
      role:
        - worker
      ssh_key_path: ~/.ssh/id_rsa
    - address: 10.45.0.247
      hostname_override: dev-k8s-node07
      user: ubuntu
      role:
        - worker
      ssh_key_path: ~/.ssh/id_rsa
    - address: 10.45.0.248
      hostname_override: dev-k8s-node08
      user: ubuntu
      role:
        - worker
      ssh_key_path: ~/.ssh/id_rsa
    - address: 10.45.0.249
      hostname_override: dev-k8s-node09
      user: ubuntu
      role:
        - worker
      ssh_key_path: ~/.ssh/id_rsa

ignore_docker_version: false
private_registries:
  - url: docker.io
    user: danielmanners
    password: DefinitelyNotTheRealPassword
    is_default: true

kubernetes_version: v1.18.10-rancher1-2

services:
    kube-api:
      # IP range for any services created on Kubernetes
      # This must match the service_cluster_ip_range in kube-controller
      service_cluster_ip_range: 10.43.0.0/16
      # Expose a different port range for NodePort services
      service_node_port_range: 30000-32767    
      pod_security_policy: false
      # Add additional arguments to the kubernetes API server
      # This WILL OVERRIDE any existing defaults
      extra_args:
        # Enable audit log to stdout
        audit-log-path: "-"
        # Increase number of delete workers
        delete-collection-workers: 3
        # Set the level of log output to debug-level
        v: 4
    # Note for Rancher 2 users: If you are configuring Cluster Options
    # using a Config File when creating Rancher Launched Kubernetes,
    # the names of services should contain underscores only:
    # `kube_controller`. This only applies to Rancher v2.0.5 and v2.0.6.
    kube-controller:
      # CIDR pool used to assign IP addresses to pods in the cluster
      cluster_cidr: 10.42.0.0/16
      # IP range for any services created on Kubernetes
      # This must match the service_cluster_ip_range in kube-api
      service_cluster_ip_range: 10.43.0.0/16
    kubelet:
      # Base domain for the cluster
      cluster_domain: cluster.local
      # IP address for the DNS service endpoint
      cluster_dns_server: 10.43.0.10
      # Fail if swap is on
      fail_swap_on: false
      # Set max pods to 250 instead of default 110
      extra_args:
        max-pods: 250
      # Optionally define additional volume binds to a service
      extra_binds:
        - "/usr/libexec/kubernetes/kubelet-plugins:/usr/libexec/kubernetes/kubelet-plugins"

# Set the name of the Kubernetes cluster  
cluster_name: homelab

# Currently, only authentication strategy supported is x509.
# You can optionally create additional SANs (hostnames or IPs) to
# add to the API server PKI certificate.
# This is useful if you want to use a load balancer for the
# control plane servers.
authentication:
    strategy: x509
    sans:
      - "10.45.0.240"
      - "10.45.0.250"
      - "dev-k8s-node0-haproxy"
      - "dev-k8s-node0-haproxy.danmanners.io"
      - "dev-k8s-node10-haproxy"
      - "dev-k8s-node10-haproxy.danmanners.io"
      - "homelab-k8s-haproxy"
      - "homelab-k8s-haproxy.danmanners.io"
      - "homelab-k8s.danmanners.io"
      - "homelab-k8s.danmanners.com"

# Kubernetes Authorization mode
authorization:
    mode: rbac

# Add-ons are deployed using kubernetes jobs. RKE will give
# up on trying to get the job status after this timeout in seconds..
addon_job_timeout: 30

# Specify network plugin-in (canal, calico, flannel, weave, or none)
network:
    plugin: flannel

# Specify DNS provider (coredns or kube-dns)
dns:
    provider: coredns

# Currently only nginx ingress provider is supported.
# To disable ingress controller, set `provider: none`
# `node_selector` controls ingress placement and is optional
ingress:
    provider: none
